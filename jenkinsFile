pipeline{
    agent any
    environment {
        VERSION = "${env.BUILD_ID}"        
    }
    
    stages{
        stage('Build'){
              tools {
                  maven '3.6.3'
              }        
            steps{
                sh 'mvn clean package'
            }
        }
        stage('sonar quality check'){
              tools {
                  maven '3.6.3'
              }                
            steps{
                script{
                    withSonarQubeEnv('sonar_server') {
                         sh "mvn sonar:sonar"
                    }
                    timeout(5) {
                        def qg = waitForQualityGate()
                        print "Finished waiting"
                        if(qg.status!='OK')
                        {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
        stage('docker image build and push')
        {
            steps{
                script{
                    withCredentials([string(credentialsId: 'nexus_pass', variable: 'nexus_password')]) {
                        sh '''
                        docker build -t 34.125.36.39:8083/${JOB_NAME}:${VERSION} .
                        docker login -u admin -p ${nexus_password} http://34.125.36.39:8083/
                        docker push 34.125.36.39:8083/${JOB_NAME}:${VERSION}
                        docker rmi 34.125.36.39:8083/${JOB_NAME}:${VERSION}
                        '''
                    }
                }
                    
                }
            }
        }
            
        }
    }
}

